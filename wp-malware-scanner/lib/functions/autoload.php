<?php
//Manually Autoload Files
    /**
     * Scan All Files In Directory
     */
    function Wp_malware_scanner_ScanAllFunction()
    {
        global $settingSet;
        update_option('wp_malware_scanner_options_run_status', "running");
        $scan = new MalwareScanner();
        $scan->setFlagHideWhitelist(true);
        $scan->setFlagHideOk(true);
        $scan->setFlagDisableStats(true);
        $scan->setEnableOpenAI($settingSet->getBoolSetting("flagOpenAIscan"));
        $scan->setEnableOpenAI_onlyThreat($settingSet->getBoolSetting("flagOpenAIscanThreat"));
        $scan->run($settingSet->getSetting("scandir"));
        $report_array = $scan->scanReport;
        update_option('wp_malware_scanner_options_run_status', "complete");
        update_option( 'wp_malware_scanner_options_run_shed',time() );
        update_option('wp_malware_scanner_options_run_result', $report_array);
    }

    function wp_malware_scanner_scan_init()
    {
        //check for running immediate service
        $api_scan_job = get_option( 'wp_malware_scanner_scan_api_stat', "idle" );
        
        if ($api_scan_job == "idle") {
            update_option('wp_malware_scanner_scan_api_stat', "running");
            try {
                Wp_malware_scanner_ScanAllFunction();
            } catch (\Throwable $th) {
                //throw $th;
                var_dump($th);
                return  array(
                    'response' =>  "ERR",
                    'error' => json_encode($th),
                );
            }
            update_option('wp_malware_scanner_scan_api_stat', "idle");
           return  array(
                'response' =>  "DONE",
            );
        }

        $rdata = array(
            'response' =>  "DETTACHED",
        );

        return $rdata;

    }

    //API hook
    function Wp_malware_scanner_ScanFile_api()
    {
        set_time_limit(0);
        echo json_encode(wp_malware_scanner_scan_init());
        
        wp_die();
    }
    add_action( 'wp_ajax_Wp_malware_scanner_ScanFile_api', 'Wp_malware_scanner_ScanFile_api' );


    //Hook For Running a Single Scan Action
    function wp_malware_scanner_background_single_action() {
        update_option( 'wp_malware_scanner_options_run_shed',time() );

        try {
            wp_malware_scanner_scheduled_event_action();
        } catch (\Throwable $th) {
            error_log($th->getMessage());
            update_option('wp_malware_scanner_options_run_status', "complete");
            update_option( 'wp_malware_scanner_options_run_shed',time() );
            update_option('wp_malware_scanner_options_run_result', new scanReport());
        }
        // Unhook the event
        wp_clear_scheduled_hook( 'wp_malware_scanner_background_task' );
    }

    // Create the function which does the work
    function wp_malware_scanner_scheduled_event_action() {
        $options = get_option( 'wp_malware_scanner_options_run_status', "idle" );
        update_option( 'wp_malware_scanner_options_run_shed',"Running Now" );
        if ($options == "idle" || $options == "complete" || $options == "called") {
            Wp_malware_scanner_ScanAllFunction();
        }
    }

    //Clear Run Data
    function clearCache()
    {
        update_option('wp_malware_scanner_options_run_status', "idle");
        update_option('wp_malware_scanner_scan_api_stat', "idle");
        update_option( 'wp_malware_scanner_options_run_shed',time() );
        delete_transient('wpMalwareScannerUpdate_cache');
        update_option('wp_malware_scanner_options_run_result', new scanReport());
    }

?>