<?php
    /**
     * Uitlity Funtion
     */
    function Wp_malware_scanner_add_br($str) {
        $str_length = strlen($str);
        $output = '';
        $current_index = 0;
        while($current_index < $str_length) {
            $output .= substr($str, $current_index, 30) . '<br>';
            $current_index += 30;
        }
        
        return $output;
    }
    function Wp_malware_scanner_printEmoji($string) {
        if($string == 'ER') {
            return '<span style="color: red; font-size: 12px;">&#x1F534;</span>';
        } elseif($string == 'WL') {
            return '<span style="color: yellow; font-size: 12px;">🤐</span>';
        }
    }

    function wp_malware_scanner_wp_enqueue_scripts(){
        wp_enqueue_script('Wp_malware_scanner-script', plugins_url( '/lib/js/main.js',__FILE__), array('jquery'), '1.2.3', true);
        wp_enqueue_style( 'Wp_malware_scanner-stylesheet', plugins_url('/lib/css/main.css', __FILE__), false, '1.0.0', 'all');
    }

    function is_true_or_false($string) {
        if (preg_match('/(true|false)/', $string)) {
            return filter_var($string, FILTER_VALIDATE_BOOLEAN);
        }
        else false;
    }

    function askOpenAI($query)
    {
        global $settingSet;
        $openAIKEY = $settingSet->getSetting("OpenAIKey");
        $curl = curl_init();
        $url = "https://api.openai.com/v1/completions";

        $data = array("model"=> "text-davinci-003","prompt" => $query, "max_tokens" => 3700, "temperature" => 0.7);
        $data_string = json_encode($data);

        curl_setopt_array($curl, array(
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_ENCODING => "",
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_TIMEOUT => 30,
        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
        CURLOPT_CUSTOMREQUEST => "POST",
        CURLOPT_POSTFIELDS => $data_string,
        CURLOPT_HTTPHEADER => array(
            "Authorization: Bearer $openAIKEY",
            "Content-Type: application/json",
        ),
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);

        curl_close($curl);

        if ($err) {
            return false;
        } else {
            $ds = json_decode($response,true);
            error_log( json_encode($ds['choices'][0]["text"]));
            $tf = json_decode($ds['choices'][0]["text"],true);
            error_log($query);
            return  $ds['choices'][0]["text"];
        }
    }
?>